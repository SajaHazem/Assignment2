package com.example.kudos.assignment2;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.TextView;public class MainActivity_A extends AppCompatActivity implements View.OnClickListener{    Button C, add, sub, div, mul, one, two, three, four, five, six, seven, eight, nine, zero, equal;    Button MPlus, back, MR , MC, N;    TextView Result;    int firstNumber, secondNumber;    int numInMemo;    boolean equalpressed = false, weHaveFirstNumber = false, memoFull = false ;    // Operation Number --> add =1 , sub =2 , mul =3, div = 5 ;    int operationNumber;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main_activity_);        Result = (TextView) findViewById(R.id.ResultText);        C = (Button) findViewById(R.id.C);        N = (Button) findViewById(R.id.N);        MR = (Button) findViewById(R.id.MR);        MC = (Button) findViewById(R.id.MC);        MPlus = (Button) findViewById(R.id.M_Plus);        back = (Button) findViewById(R.id.Back);        equal = (Button) findViewById(R.id.equal);        add = (Button) findViewById(R.id.plus);        sub = (Button) findViewById(R.id.minus);        mul = (Button) findViewById(R.id.mul);        div = (Button) findViewById(R.id.div);        one = (Button) findViewById(R.id.one);        two = (Button) findViewById(R.id.two);        three = (Button) findViewById(R.id.three);        four = (Button) findViewById(R.id.four);        five = (Button) findViewById(R.id.five);        six = (Button) findViewById(R.id.six);        seven = (Button) findViewById(R.id.seven);        eight = (Button) findViewById(R.id.eight);        nine = (Button) findViewById(R.id.nine);        zero = (Button) findViewById(R.id.zero);        //------------------------------------------------------------------------------------------        one.setOnClickListener(this);        two.setOnClickListener(this);        three.setOnClickListener(this);        four.setOnClickListener(this);        five.setOnClickListener(this);        six.setOnClickListener(this);        seven.setOnClickListener(this);        eight.setOnClickListener(this);        nine.setOnClickListener(this);        zero.setOnClickListener(this);        //------------------------------------------------------------------------------------------        C.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                // clear Result textView and any other attribute                clear();            }        });        //------------------------------------------------------------------------------------------        add.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                operationNumber = 1;                getFirstNumber();                            }        });        //------------------------------------------------------------------------------------------        sub.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                operationNumber = 2;                getFirstNumber();            }        });        //------------------------------------------------------------------------------------------        mul.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                operationNumber = 3;                getFirstNumber();            }        });        //------------------------------------------------------------------------------------------        div.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                operationNumber = 4;                getFirstNumber();            }        });        //------------------------------------------------------------------------------------------        equal.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                printResult();            }        });        //------------------------------------------------------------------------------------------        back.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                backButton();            }        });        //------------------------------------------------------------------------------------------        MPlus.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {               saveInMemo();            }        });        //------------------------------------------------------------------------------------------        MR.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                getFromMemo();            }        });        //------------------------------------------------------------------------------------------        MC.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                // clean Memo                numInMemo = 0;                memoFull = false ;            }        });        //------------------------------------------------------------------------------------------        N.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                // negative number                if (!checkIfNegative())                    Result.setText("-" + Result.getText());                else                    Result.setText(Result.getText().subSequence(1,Result.getText().length()));            }        });        //------------------------------------------------------------------------------------------    }    public void getFromMemo(){        if (memoFull)            Result.setText(numInMemo +"");        else            Result.setText("Invalid");    }    public void saveInMemo(){        try {            numInMemo = Integer.parseInt(Result.getText().toString());            memoFull = true;            Result.setText("");        }catch (Exception ex){}    }    public void  backButton(){        // delete last number        String currentNumber = Result.getText().toString();        if (currentNumber.length() >= 1) {            currentNumber = currentNumber.substring(0, currentNumber.length() - 1);            Result.setText(currentNumber);        }        else            Result.setText("");    }    public void getFirstNumber (){        try {            if (Result.getText().toString().equals(""))                firstNumber = 0;            else {                if (checkIfNegative())                    firstNumber = Integer.parseInt(Result.getText().subSequence(1, Result.getText().length()) + "") * -1;                else                    firstNumber = Integer.parseInt(Result.getText().toString() + "");            }            Result.setText("");            weHaveFirstNumber = true;        }catch (Exception ex){        }    }    public void printResult (){        equalpressed = true ;        try {            if (Result.getText().toString().equals(""))                secondNumber = 0;            else {                if (checkIfNegative())                    secondNumber = Integer.parseInt(Result.getText().subSequence(1, Result.getText().length()) + "") * -1;                else                    secondNumber = Integer.parseInt(Result.getText().toString() + "");            }        }catch(Exception ex){}        int resultNumber = 0 ;        switch (operationNumber){            case 1: {                resultNumber = firstNumber + secondNumber;                break;            }            case 2: {                resultNumber = firstNumber - secondNumber;                break;            }            case 3:{                resultNumber = firstNumber * secondNumber;                break;            }            case 4: {                if (secondNumber == 0)                    Result.setText("INVALID");                else                    resultNumber = firstNumber / secondNumber;                break;            }        }        if ( !Result.getText().toString().equals("INVALID") )            Result.setText(resultNumber+"");        weHaveFirstNumber = false ;        firstNumber = 0 ;        secondNumber = 0 ;    }    @Override    public void onClick(View v) {       // here write the number entered to the Result TextView        if (equalpressed == true ){            equalpressed = false ;            Result.setText("");        }        if(Result.getText().toString().contains("Invalid"))            Result.setText("");        switch (v.getId()){            case R.id.one: {                Result.setText(Result.getText() + "1");                break;            }            case R.id.two: {                Result.setText(Result.getText() + "2");                break;            }            case R.id.three: {                Result.setText(Result.getText() + "3");                break;            }            case R.id.four: {                Result.setText(Result.getText() + "4");                break;            }            case R.id.five: {                Result.setText(Result.getText() + "5");                break;            }            case R.id.six: {                Result.setText(Result.getText() + "6");                break;            }            case R.id.seven: {                Result.setText(Result.getText() + "7");                break;            }            case R.id.eight: {                Result.setText(Result.getText() + "8");                break;            }            case R.id.nine: {                Result.setText(Result.getText() + "9");                break;            }            case R.id.zero: {                Result.setText(Result.getText() + "0");                break;            }        }    }    public void clear() {        Result.setText("");        firstNumber = 0;        secondNumber =0;    }    public boolean checkIfNegative(){        if (Result.getText().toString().contains("-")){            return true;        }        else            return false ;    }}